---
layout: post
title: Intro to NodeJS
author: joebui
categories: [languages]
---

> I guess you have heard of some famous programming languages used to make web application such
> as Python, Java, Golang and Ruby. NodeJS is also among them and what is the special things about it?
> In this post I will show you the basic concepts of NodeJS to help you understand and make it easy to
> research further.

# What is it???

NodeJS is actually **Javascript** runtime, built on [V8 Javascript Engine of Google Chrome](https://developers.google.com/v8/).
It uses an an event-driven and non-blocking I/O model that make it lightweight and highly scalable. For more information about its artchitecture, you can
refer to this [link](https://www.tutorialspoint.com/nodejs/nodejs_introduction.htm). Many companies and individuals contribute to NodeJS like IBM, Microsoft, Intel and Google.

# When should I use NodeJS?

NodeJS is fast but it doesn't mean it needs to be applied for all types of web app. It is suitable in these areas:

-   I/O bound app
-   Data streaming
-   Real-time app
-   Single Page Application (SPA)

It is **NOT** a great idea to use Node for web app that requires heavy computing, CPU-bound and
mathematically-precised.

# NPM

You may know that for .NET it has a package manager called NuGet package manager or RubyGems in Ruby. NPM is like that but for NodeJS.
There are many packages on [npm](https://www.npmjs.com/) and anyone can create and publish their packages online for everyone to use or
contribute. There are 2 main ways to install a package:

### Install on your system

```
$ npm install package-name -g
```

### Install on a specific NodeJS project

```
$ npm install package-name --save
```

It will be stored in the node_modules folder in the project folder and stated in the "package.json" file. In a NodeJS project, it is suggested that you should
ignore the node_modules folder if you use source version control, such as git. Others can clone your project and install packages easily with this command:

```
$ npm i
```

### Checking update for packages

If you want the packages to be up-to-date, you can use [npm-check-updates](https://www.npmjs.com/package/npm-check-updates) to help you check for updates.

# Frameworks to go with NodeJS

There are many open frameworks out there for you to choose to develop your NodeJS application such as
[Express](http://expressjs.com/), which is the most popular one on npm and and the new one named
[FeatherJS](http://feathersjs.com/). It is up to you to choose the ideal framework for your project.

# IDE/Text Editor for coding NodeJS

You can use tradional text editor like Notepad++, Sublime, Atom if you want. But I suggest you should try this new IDE from Microsoft called [Visual Studio Code](https://code.visualstudio.com/c?utm_expid=101350005-27.GqBWbOBuSRqlazQC_nNSRg.2&utm_referrer=https%3A%2F%2Fcode.visualstudio.com%2Fc), which is easy to
use and customize. Or if you have student account of Jetbrains or license, you can use [Webstorm](https://www.jetbrains.com/webstorm/).

# Resource for learning NodeJS

I found this [resource](http://www.tutorialspoint.com/nodejs/index.htm) on Tutorialspoint, which really helped me get the basic information about NodeJS.

To download NodeJS, go to the official [website](https://nodejs.org/en/) or you can use [nvm](https://github.com/creationix/nvm).

For ExpressJS framework, you can check out the official [website](https://expressjs.com/).

If you don't want to write long SQL statements to read/write database, you may want try this ORM package for NodeJS, [Sequelize](http://docs.sequelizejs.com/en/v3/).

Have fun coding ;)
